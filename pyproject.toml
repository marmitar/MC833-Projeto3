[project]
name = "network-traffic-predictor"
version = "0.1.0"
description = "Build a model that forecasts the `bytes_per_second` in a time series generated from a public datasets."
readme = "README.md"
requires-python = ">= 3.12, < 3.13"
license = "AGPL-3.0-or-later"
keywords = [
  "time-series",
  "forecasting",
  "network-traffic",
  "prediction",
  "machine-learning",
  "deep-learning",
  "ai",
  "networking",
  "network-monitoring",
  "traffic-analysis",
  "data-science",
]
authors = [{ name = "Tiago de Paula", email = "tiagodepalves@gmail.com" }]
classifiers = [
  "Development Status :: 1 - Planning",
  "Environment :: Console",
  "Environment :: GPU",
  "Framework :: Hatch",
  "Framework :: Jupyter",
  "Intended Audience :: Education",
  "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
  "Natural Language :: English",
  "Natural Language :: Portuguese (Brazilian)",
  "Operating System :: POSIX :: Linux",
  "Private :: Do Not Upload",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Internet :: Log Analysis",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: System :: Networking",
  "Topic :: System :: Networking :: Monitoring",
]
dependencies = [
  "dpkt >= 1.9.8, < 2",
  "numpy >= 2.0.0, < 3",
  "polars >= 1.30.0, < 2",
  "tensorflow >= 2.17.1, < 3; extra != 'rocm'"
]

[project.optional-dependencies]
rocm = [
  "tensorflow-rocm >= 2.17.1, < 3",
]

[project.urls]
Documentation = "https://github.com/marmitar/MC833-Projeto3#readme"
Issues = "https://github.com/marmitar/MC833-Projeto3/issues"
Source = "https://github.com/marmitar/MC833-Projeto3"

[tool.uv]
environments = [
  "sys_platform == 'linux'",
  "sys_platform == 'darwin'",
]

[[tool.uv.index]]
name = "rocm-rel-6.4"
url = "https://repo.radeon.com/rocm/manylinux/rocm-rel-6.4"
format = "flat"

[tool.uv.sources]
tensorflow-rocm = { index = "rocm-rel-6.4" }

[build-system]
requires = ["uv_build >= 0.7.13, < 1"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-name = "network_traffic_predictor"
module-root = ""

[dependency-groups]
dev = [
  # Linting
  "pre-commit >= 4.2.0, < 5",
  "ruff >= 0.11.13, < 1",
  # Typing
  "pyright >= 1.1.402, < 2",
  "types-tqdm >= 4.67.0.20250516, < 5",
  # Testing
  "pytest >= 8.4.0, < 9",
  "pytest-cov >= 6.2.1, < 7",
]
data = [
  "tqdm >= 4.67.1, < 5",
]
mawi = [
  "ipykernel >= 6.29.5, < 7",
  "matplotlib >= 3.10.3, < 4",
  "numpy",
  "pandas >= 2.3.0, < 3",
  "pip >= 25.1.1",
  "pyarrow >= 20.0.0, < 21",
  "scapy >= 2.6.1, < 3",
  "scikit-learn >= 1.7.0, < 2",
  "statsmodels >= 0.14.4, < 1",
  "tensorflow; extra != 'rocm'",
]

[tool.ruff]
target-version = "py312"
line-length = 120
indent-width = 4
exclude = ["docs/"]

[tool.ruff.format]
indent-style = "space"
quote-style = "single"
line-ending = "lf"
docstring-code-format = true
preview = true

[tool.ruff.lint]
select = [
  "E", # pycodestyle (error)
  "F", # pyflakes
  "B", # bugbear
  "B9",
  "C4", # flake8-comprehensions
  "SIM", # flake8-simplify
  "I", # isort
  "UP", # pyupgrade
  "PIE", # flake8-pie
  "PGH", # pygrep-hooks
  "PYI", # flake8-pyi
  "RUF",
]

# see https://microsoft.github.io/pyright/#/configuration
[tool.pyright]
exclude = [
  ".venv/",
  "docs/",
]
ignore = [
  ".venv/",
  "docs/",
]
venv = ".venv"
pythonVersion = "3.12"
pythonPlatform = "Linux"
# type checking
typeCheckingMode = "strict"
reportCallInDefaultInitializer = "warning"
reportImplicitOverride = "warning"
reportImplicitStringConcatenation = "warning"
reportImportCycles = "warning"
reportMissingSuperCall = "warning"
reportPropertyTypeMismatch = "warning"
reportShadowedImports = "warning"
reportUninitializedInstanceVariable = "warning"
reportUnnecessaryTypeIgnoreComment = "warning"
reportUnreachable = "warning"
reportUnusedCallResult = "warning"
