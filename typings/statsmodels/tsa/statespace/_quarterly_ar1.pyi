"""
This type stub file was generated by pyright.
"""

from statsmodels.tsa.statespace import mlemodel

"""
(Internal) AR(1) model for monthly growth rates aggregated to quarterly freq.

Author: Chad Fulton
License: BSD-3
"""
class QuarterlyAR1(mlemodel.MLEModel):
    r"""
    AR(1) model for monthly growth rates aggregated to quarterly frequency

    Parameters
    ----------
    endog : array_like
        The observed time-series process :math:`y`

    Notes
    -----
    This model is internal, used to estimate starting parameters for the
    DynamicFactorMQ class. The model is:

    .. math::

        y_t & = \begin{bmatrix} 1 & 2 & 3 & 2 & 1 \end{bmatrix} \alpha_t \\
        \alpha_t & = \begin{bmatrix}
            \phi & 0 & 0 & 0 & 0 \\
               1 & 0 & 0 & 0 & 0 \\
               0 & 1 & 0 & 0 & 0 \\
               0 & 0 & 1 & 0 & 0 \\
               0 & 0 & 0 & 1 & 0 \\
        \end{bmatrix} +
        \begin{bmatrix} 1 \\ 0 \\ 0 \\ 0 \\ 0 \end{bmatrix} \varepsilon_t

    The two parameters to be estimated are :math:`\phi` and :math:`\sigma^2`.

    It supports fitting via the usual quasi-Newton methods, as well as using
    the EM algorithm.

    """
    def __init__(self, endog) -> None:
        ...

    @property
    def param_names(self): # -> list[str]:
        ...

    @property
    def start_params(self): # -> NDArray[Any]:
        ...

    def fit(self, *args, **kwargs): # -> tuple[NDArray[Any] | NDArray[float64], ndarray[tuple[int], dtype[Any]] | ndarray[_AnyShape, dtype[Any]] | Any] | NDArray[Any] | NDArray[float64] | MLEResultsWrapper:
        ...

    def fit_em(self, start_params=..., transformed=..., cov_type=..., cov_kwds=..., maxiter=..., tolerance=..., em_initialization=..., mstep_method=..., full_output=..., return_params=..., low_memory=...): # -> NDArray[float64] | NDArray[Any] | MLEResultsWrapper:
        ...

    def transform_params(self, unconstrained): # -> NDArray[float64]:
        ...

    def untransform_params(self, constrained): # -> NDArray[float64]:
        ...

    def update(self, params, **kwargs): # -> None:
        ...
