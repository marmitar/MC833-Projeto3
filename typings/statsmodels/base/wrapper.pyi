"""
This type stub file was generated by pyright.
"""

class ResultsWrapper:
    """
    Class which wraps a statsmodels estimation Results class and steps in to
    reattach metadata to results (if available)
    """
    _wrap_attrs = ...
    _wrap_methods = ...
    def __init__(self, results) -> None:
        ...

    def __dir__(self): # -> list[str]:
        ...

    def __getattribute__(self, attr): # -> Any:
        ...

    def __getstate__(self): # -> dict[str, Any]:
        ...

    def __setstate__(self, dict_): # -> None:
        ...

    def save(self, fname, remove_data=...): # -> None:
        """
        Save a pickle of this instance.

        Parameters
        ----------
        fname : {str, handle}
            Either a filename or a valid file handle.
        remove_data : bool
            If False (default), then the instance is pickled without changes.
            If True, then all arrays with length nobs are set to None before
            pickling. See the remove_data method.
            In some cases not all arrays will be set to None.
        """
        ...

    @classmethod
    def load(cls, fname): # -> Any:
        """
        Load a pickled results instance

        .. warning::

           Loading pickled models is not secure against erroneous or
           maliciously constructed data. Never unpickle data received from
           an untrusted or unauthenticated source.

        Parameters
        ----------
        fname : {str, handle}
            A string filename or a file handle.

        Returns
        -------
        Results
            The unpickled results instance.
        """
        ...



def union_dicts(*dicts): # -> dict[Any, Any]:
    ...

def make_wrapper(func, how): # -> _Wrapped[Callable[..., Any], Any, Callable[..., Any], Any]:
    ...

def populate_wrapper(klass, wrapping): # -> None:
    ...
