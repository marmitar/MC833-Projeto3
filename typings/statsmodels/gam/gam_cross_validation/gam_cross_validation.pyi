"""
This type stub file was generated by pyright.
"""

from abc import ABCMeta
from statsmodels.compat.python import with_metaclass

"""
Cross-validation classes for GAM

Author: Luca Puggini

"""
class BaseCV(with_metaclass(ABCMeta)):
    """
    BaseCV class. It computes the cross validation error of a given model.
    All the cross validation classes can be derived by this one
    (e.g. GamCV, LassoCV,...)
    """
    def __init__(self, cv_iterator, endog, exog) -> None:
        ...

    def fit(self, **kwargs): # -> NDArray[Any]:
        ...



class MultivariateGAMCV(BaseCV):
    def __init__(self, smoother, alphas, gam, cost, endog, exog, cv_iterator) -> None:
        ...



class BasePenaltiesPathCV(with_metaclass(ABCMeta)):
    """
    Base class for cross validation over a grid of parameters.

    The best parameter is saved in alpha_cv

    This class is currently not used
    """
    def __init__(self, alphas) -> None:
        ...

    def plot_path(self): # -> None:
        ...



class MultivariateGAMCVPath:
    """k-fold cross-validation for GAM

    Warning: The API of this class is preliminary and will change.

    Parameters
    ----------
    smoother : additive smoother instance
    alphas : list of iteratables
        list of alpha for smooths. The product space will be used as alpha
        grid for cross-validation
    gam : model class
        model class for creating a model with k-fole training data
    cost : function
        cost function for the prediction error
    endog : ndarray
        dependent (response) variable of the model
    cv_iterator : instance of cross-validation iterator
    """
    def __init__(self, smoother, alphas, gam, cost, endog, exog, cv_iterator) -> None:
        ...

    def fit(self, **kwargs): # -> Self:
        ...
