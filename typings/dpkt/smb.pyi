"""
This type stub file was generated by pyright.
"""

from . import dpkt

"""Server Message Block."""
SMB_FLAGS_LOCK_AND_READ_OK = ...
SMB_FLAGS_BUF_AVAIL = ...
SMB_FLAGS_CASE_INSENSITIVE = ...
SMB_FLAGS_CANONICALIZED_PATHS = ...
SMB_FLAGS_OPLOCK = ...
SMB_FLAGS_OPBATCH = ...
SMB_FLAGS_REPLY = ...
SMB_FLAGS2_LONG_NAMES = ...
SMB_FLAGS2_EXTENDED_ATTRIBUTES = ...
SMB_FLAGS2_SECURITY_SIGNATURES = ...
SMB_FLAGS2_COMPRESSED = ...
SMB_FLAGS2_SECURITY_SIGNATURES_REQUIRED = ...
SMB_FLAGS2_IS_LONG_NAME = ...
SMB_FLAGS2_REVERSE_PATH = ...
SMB_FLAGS2_EXTENDED_SECURITY = ...
SMB_FLAGS2_DFS = ...
SMB_FLAGS2_PAGING_IO = ...
SMB_FLAGS2_NT_STATUS = ...
SMB_FLAGS2_UNICODE = ...
SMB_STATUS_SUCCESS = ...
class SMB(dpkt.Packet):
    r"""Server Message Block.

    Server Message Block (SMB) is a communication protocol[1] that Microsoft created for providing
    shared access to files and printers across nodes on a network. It also provides an authenticated
    inter-process communication (IPC) mechanism.

    Attributes:
        __hdr__: SMB Headers
            proto: (bytes): Protocol. This field MUST contain the 4-byte literal string '\xFF', 'S', 'M', 'B' (4 bytes)
            cmd: (int): Command. Defines SMB command. (1 byte)
            status: (int): Status. Communicates error messages from the server to the client. (4 bytes)
            flags: (int): Flags. Describes various features in effect for the message.(1 byte)
            flags2: (int): Flags2. Represent various features in effect for the message.
                Unspecified bits are reserved and MUST be zero. (2 bytes)
            _pidhi: (int): PIDHigh. Represents the high-order bytes of a process identifier (PID) (2 bytes)
            security: (bytes): SecurityFeatures. Has three possible interpretations. (8 bytes)
            rsvd: (int): Reserved. This field is reserved and SHOULD be set to 0x0000. (2 bytes)
            tid: (int): TID. A tree identifier (TID). (2 bytes)
            _pidlo: (int): PIDLow. The lower 16-bits of the PID. (2 bytes)
            uid: (int): UID. A user identifier (UID). (2 bytes)
            mid: (int): MID. A multiplex identifier (MID).(2 bytes)
    """
    __byte_order__ = ...
    __hdr__ = ...
    @property
    def pid(self):
        ...
    
    @pid.setter
    def pid(self, v): # -> None:
        ...
    


def test_smb(): # -> None:
    ...

