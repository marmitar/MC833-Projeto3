

from . import dpkt

"""GNU zip."""
GZIP_MAGIC = ...
GZIP_MSTORED = ...
GZIP_MCOMPRESS = ...
GZIP_MPACKED = ...
GZIP_MLZHED = ...
GZIP_MDEFLATE = ...
GZIP_FTEXT = ...
GZIP_FHCRC = ...
GZIP_FEXTRA = ...
GZIP_FNAME = ...
GZIP_FCOMMENT = ...
GZIP_FENCRYPT = ...
GZIP_FRESERVED = ...
GZIP_OS_MSDOS = ...
GZIP_OS_AMIGA = ...
GZIP_OS_VMS = ...
GZIP_OS_UNIX = ...
GZIP_OS_VMCMS = ...
GZIP_OS_ATARI = ...
GZIP_OS_OS2 = ...
GZIP_OS_MACOS = ...
GZIP_OS_ZSYSTEM = ...
GZIP_OS_CPM = ...
GZIP_OS_TOPS20 = ...
GZIP_OS_WIN32 = ...
GZIP_OS_QDOS = ...
GZIP_OS_RISCOS = ...
GZIP_OS_UNKNOWN = ...
GZIP_FENCRYPT_LEN = ...
class GzipExtra(dpkt.Packet):
    __byte_order__ = ...
    __hdr__ = ...


class Gzip(dpkt.Packet):
    __byte_order__ = ...
    __hdr__ = ...
    def __init__(self, *args, **kwargs) -> None:
        ...

    def unpack(self, buf): # -> None:
        ...

    def pack_hdr(self): # -> bytes:
        ...

    def compress(self): # -> None:

        ...

    def decompress(self): # -> bytes:

        ...



class TestGzip:

    @classmethod
    def setup_class(cls): # -> None:
        ...

    def test_method(self): # -> None:
        ...

    def test_flags(self): # -> None:
        ...

    def test_mtime(self): # -> None:
        ...

    def test_xflags(self): # -> None:
        ...

    def test_os(self): # -> None:
        ...

    def test_filename(self): # -> None:
        ...

    def test_decompress(self): # -> None:
        ...



def test_flags_extra(): # -> None:
    ...

def test_flags_filename(): # -> None:
    ...

def test_flags_comment(): # -> None:
    ...

def test_flags_encrypt(): # -> None:
    ...

def test_flags_hcrc(): # -> None:
    ...

def test_compress(): # -> None:
    ...
