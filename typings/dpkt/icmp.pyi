

from . import dpkt

"""Internet Control Message Protocol."""
ICMP_CODE_NONE = ...
ICMP_ECHOREPLY = ...
ICMP_UNREACH = ...
ICMP_UNREACH_NET = ...
ICMP_UNREACH_HOST = ...
ICMP_UNREACH_PROTO = ...
ICMP_UNREACH_PORT = ...
ICMP_UNREACH_NEEDFRAG = ...
ICMP_UNREACH_SRCFAIL = ...
ICMP_UNREACH_NET_UNKNOWN = ...
ICMP_UNREACH_HOST_UNKNOWN = ...
ICMP_UNREACH_ISOLATED = ...
ICMP_UNREACH_NET_PROHIB = ...
ICMP_UNREACH_HOST_PROHIB = ...
ICMP_UNREACH_TOSNET = ...
ICMP_UNREACH_TOSHOST = ...
ICMP_UNREACH_FILTER_PROHIB = ...
ICMP_UNREACH_HOST_PRECEDENCE = ...
ICMP_UNREACH_PRECEDENCE_CUTOFF = ...
ICMP_SRCQUENCH = ...
ICMP_REDIRECT = ...
ICMP_REDIRECT_NET = ...
ICMP_REDIRECT_HOST = ...
ICMP_REDIRECT_TOSNET = ...
ICMP_REDIRECT_TOSHOST = ...
ICMP_ALTHOSTADDR = ...
ICMP_ECHO = ...
ICMP_RTRADVERT = ...
ICMP_RTRADVERT_NORMAL = ...
ICMP_RTRADVERT_NOROUTE_COMMON = ...
ICMP_RTRSOLICIT = ...
ICMP_TIMEXCEED = ...
ICMP_TIMEXCEED_INTRANS = ...
ICMP_TIMEXCEED_REASS = ...
ICMP_PARAMPROB = ...
ICMP_PARAMPROB_ERRATPTR = ...
ICMP_PARAMPROB_OPTABSENT = ...
ICMP_PARAMPROB_LENGTH = ...
ICMP_TSTAMP = ...
ICMP_TSTAMPREPLY = ...
ICMP_INFO = ...
ICMP_INFOREPLY = ...
ICMP_MASK = ...
ICMP_MASKREPLY = ...
ICMP_TRACEROUTE = ...
ICMP_DATACONVERR = ...
ICMP_MOBILE_REDIRECT = ...
ICMP_IP6_WHEREAREYOU = ...
ICMP_IP6_IAMHERE = ...
ICMP_MOBILE_REG = ...
ICMP_MOBILE_REGREPLY = ...
ICMP_DNS = ...
ICMP_DNSREPLY = ...
ICMP_SKIP = ...
ICMP_PHOTURIS = ...
ICMP_PHOTURIS_UNKNOWN_INDEX = ...
ICMP_PHOTURIS_AUTH_FAILED = ...
ICMP_PHOTURIS_DECOMPRESS_FAILED = ...
ICMP_PHOTURIS_DECRYPT_FAILED = ...
ICMP_PHOTURIS_NEED_AUTHN = ...
ICMP_PHOTURIS_NEED_AUTHZ = ...
ICMP_TYPE_MAX = ...
class ICMP(dpkt.Packet):

    __hdr__ = ...
    class Echo(dpkt.Packet):
        __hdr__ = ...


    class Quote(dpkt.Packet):
        __hdr__ = ...
        def unpack(self, buf): # -> None:
            ...



    class Unreach(Quote):
        __hdr__ = ...


    class Quench(Quote):
        ...


    class Redirect(Quote):
        __hdr__ = ...


    class ParamProbe(Quote):
        __hdr__ = ...


    class TimeExceed(Quote):
        ...


    _typesw = ...
    def unpack(self, buf): # -> None:
        ...

    def __bytes__(self): # -> bytes:
        ...



def test_icmp(): # -> None:
    ...

def test_invalid_data(): # -> None:
    ...
