"""
This type stub file was generated by pyright.
"""

from . import dpkt

"""Internet Control Message Protocol for IPv6."""
ICMP6_DST_UNREACH = ...
ICMP6_PACKET_TOO_BIG = ...
ICMP6_TIME_EXCEEDED = ...
ICMP6_PARAM_PROB = ...
ICMP6_ECHO_REQUEST = ...
ICMP6_ECHO_REPLY = ...
MLD_LISTENER_QUERY = ...
MLD_LISTENER_REPORT = ...
MLD_LISTENER_DONE = ...
ICMP6_MEMBERSHIP_QUERY = ...
ICMP6_MEMBERSHIP_REPORT = ...
ICMP6_MEMBERSHIP_REDUCTION = ...
ND_ROUTER_SOLICIT = ...
ND_ROUTER_ADVERT = ...
ND_NEIGHBOR_SOLICIT = ...
ND_NEIGHBOR_ADVERT = ...
ND_REDIRECT = ...
ICMP6_ROUTER_RENUMBERING = ...
ICMP6_WRUREQUEST = ...
ICMP6_WRUREPLY = ...
ICMP6_FQDN_QUERY = ...
ICMP6_FQDN_REPLY = ...
ICMP6_NI_QUERY = ...
ICMP6_NI_REPLY = ...
ICMP6_MAXTYPE = ...
class ICMP6(dpkt.Packet):
    """Internet Control Message Protocol for IPv6.

    Internet Control Message Protocol version 6 (ICMPv6) is the implementation of the Internet Control Message Protocol
    (ICMP) for Internet Protocol version 6 (IPv6). ICMPv6 is an integral part of IPv6 and performs error reporting
    and diagnostic functions.

    Attributes:
        __hdr__: Header fields of ICMPv6.
            type: (int): Type. Control messages are identified by the value in the type field.  (1 byte)
            code: (int): Code. The code field gives additional context information for the message. (1 byte)
            sum: (int): Checksum. ICMPv6 provides a minimal level of message integrity verification. (2 bytes)
    """
    __hdr__ = ...
    class Error(dpkt.Packet):
        __hdr__ = ...
        def unpack(self, buf): # -> None:
            ...
        
    
    
    class Unreach(Error):
        ...
    
    
    class TooBig(Error):
        __hdr__ = ...
    
    
    class TimeExceed(Error):
        ...
    
    
    class ParamProb(Error):
        __hdr__ = ...
    
    
    class Echo(dpkt.Packet):
        __hdr__ = ...
    
    
    _typesw = ...
    def unpack(self, buf): # -> None:
        ...
    


