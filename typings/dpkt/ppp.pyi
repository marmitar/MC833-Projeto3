"""
This type stub file was generated by pyright.
"""

from . import dpkt

"""Point-to-Point Protocol."""
PPP_IP = ...
PPP_IP6 = ...
PFC_BIT = ...
class PPP(dpkt.Packet):
    """Point-to-Point Protocol.

    Point-to-Point Protocol (PPP) is a data link layer (layer 2) communication protocol between two routers directly
    without any host or any other networking in between. It can provide connection authentication, transmission
    encryption and data compression.

    Note: This class is subclassed in PPPoE

    Attributes:
        __hdr__: Header fields of PPP.
            addr: (int): Address. 0xFF, standard broadcast address. (1 byte)
            cntrl: (int): Control. 0x03, unnumbered data. (1 byte)
            p: (int): Protocol. PPP ID of embedded data. (1 byte)
    """
    __hdr__ = ...
    _protosw = ...
    @classmethod
    def set_p(cls, p, pktclass): # -> None:
        ...
    
    @classmethod
    def get_p(cls, p):
        ...
    
    def unpack(self, buf): # -> None:
        ...
    
    def pack_hdr(self): # -> bytes:
        ...
    


def test_ppp(): # -> None:
    ...

def test_ppp_short(): # -> None:
    ...

def test_packing(): # -> None:
    ...

def test_ppp_classmethods(): # -> None:
    class TestProto(dpkt.Packet):
        ...
    
    

def test_unpacking_exceptions(): # -> None:
    ...

def test_ppp_packing_error(): # -> None:
    ...

def test_proto_loading(): # -> None:
    ...

