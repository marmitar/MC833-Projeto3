

from . import dpkt

"""Point-to-Point Protocol."""
PPP_IP = ...
PPP_IP6 = ...
PFC_BIT = ...
class PPP(dpkt.Packet):

    __hdr__ = ...
    _protosw = ...
    @classmethod
    def set_p(cls, p, pktclass): # -> None:
        ...

    @classmethod
    def get_p(cls, p):
        ...

    def unpack(self, buf): # -> None:
        ...

    def pack_hdr(self): # -> bytes:
        ...



def test_ppp(): # -> None:
    ...

def test_ppp_short(): # -> None:
    ...

def test_packing(): # -> None:
    ...

def test_ppp_classmethods(): # -> None:
    class TestProto(dpkt.Packet):
        ...



def test_unpacking_exceptions(): # -> None:
    ...

def test_ppp_packing_error(): # -> None:
    ...

def test_proto_loading(): # -> None:
    ...
