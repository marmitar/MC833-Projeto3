"""
This type stub file was generated by pyright.
"""

from . import dpkt

"""Cisco Discovery Protocol."""
CDP_DEVID = ...
CDP_ADDRESS = ...
CDP_PORTID = ...
CDP_CAPABILITIES = ...
CDP_VERSION = ...
CDP_PLATFORM = ...
CDP_IPPREFIX = ...
CDP_VTP_MGMT_DOMAIN = ...
CDP_NATIVE_VLAN = ...
CDP_DUPLEX = ...
CDP_TRUST_BITMAP = ...
CDP_UNTRUST_COS = ...
CDP_SYSTEM_NAME = ...
CDP_SYSTEM_OID = ...
CDP_MGMT_ADDRESS = ...
CDP_LOCATION = ...
class CDP(dpkt.Packet):
    """Cisco Discovery Protocol.

    Cisco Discovery Protocol (CDP) is a proprietary Data Link Layer protocol developed by Cisco Systems in 1994
    by Keith McCloghrie and Dino Farinacci. It is used to share information about other directly connected
    Cisco equipment, such as the operating system version and IP address.

    See more on
    https://en.wikipedia.org/wiki/Cisco_Discovery_Protocol

    Attributes:
        __hdr__: Header fields of CDP.
            version: (int): CDP protocol version. (1 byte)
            ttl: (int): Time to live. The amount of time in seconds that a receiver should retain the information
                contained in this packet. (1 byte)
            sum: (int): Checksum. (2 bytes)
    """
    __hdr__ = ...
    class TLV(dpkt.Packet):
        """Type–length–value

        When constructing the packet, len is not mandatory:
        if not provided, then self.data must be this exact TLV payload

        Attributes:
            __hdr__: Header fields of TLV.
                type: (int): Type (2 bytes)
                len: (int): The total length in bytes of the Type, Length and Data fields. (2 bytes)
        """
        __hdr__ = ...
        def data_len(self): # -> int:
            ...
        
        def unpack(self, buf): # -> None:
            ...
        
        def __len__(self):
            ...
        
        def __bytes__(self): # -> bytes:
            ...
        
    
    
    class Address(TLV):
        __hdr__ = ...
        def data_len(self):
            ...
        
    
    
    class TLV_Addresses(TLV):
        __hdr__ = ...
    
    
    def unpack(self, buf): # -> None:
        ...
    
    def __len__(self):
        ...
    
    def __bytes__(self): # -> bytes:
        ...
    
    tlv_types = ...


def test_cdp(): # -> None:
    ...

def test_tlv(): # -> None:
    ...

def test_address(): # -> None:
    ...

